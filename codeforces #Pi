【时间】2015-8-6 0:00-2:30（∈深夜想题系列）

【比赛过程】
第二次打cf。。rating跌得很惨
先从九点钟睡到十一点半，然后起来打比赛 
还是和上次一样，从A开始看
A是一个傻X贪心，很简单
因为我看错数据范围，数组开得太大了（>=le8），调了20多分钟，还CE了一次
可以去撞墙了（捂脸跑）
B是模拟题，脑子有点转不动了，所以写得奇慢无比
C、D看起来都不难（能用大暴力），但是正解没做出来
没看E题

A
【链接】
http://codeforces.com/problemset/problem/567/A
【题目】
给一串升序排列的数以及若干组特定的数（每组一个，相对独立），求与这个数差最小与最大的数
【题解】
贪心可证。
由于是升序排列，所以只用比较那个数与左右两边的差、以及那个数与最大、最小的数之差即可。
需要特别处理两个端点
【代码】
//修改过
#include<iostream>
#include<cstdio>
#include<cstdlib>
#define i64 int
const int maxn =100000+10;
using namespace std;
i64 n,a[maxn];
int main(){
	cin>>n;
	for(i64 i=1;i<=n;i++) scanf("%d",&a[i]);
	cout<<a[2]-a[1]<<' '<<a[n]-a[1]<<endl;
	for(i64 i=2;i<=n-1;i++)	
	  printf("%d %d\n",min(a[i]-a[i-1],a[i+1]-a[i]),max(a[i]-a[1],a[n]-a[i]));
	cout<<a[n]-a[n-1]<<' '<<a[n]-a[1];
	return 0;
}

B
【链接】
http://codeforces.com/problemset/problem/567/B
【题目】
有一个读书室，用“+ x”表示编号为x的人进入，“- x”表示编号为x的人出去。（1<=x<=le6）
保证输入合法，且每人的编号唯一。
读书室里面原来可能会有一些人，但不会给出。
求读书室在人最多的时候有多少人。
【题解】
这题难点在于如何确定读书室里面原有的人数。
开两个数组，一个bool数组存放编号是否进入过，另一个存放每个时间点的人数。
用cur表示当前人数，如果遇到进入的人，cur++，并且维护bool数组的编号，如果遇到出去的人，cur--，
如果出去的人没有进来过，则他是原有人数，在出去之前一直在读书室中，所以从1到当前时刻的人数都要+1。
最后将当前时刻的人数加上cur。
每操作一次扫一遍找最大，由于时间数量不大，所以不会TLE。
其实可以最后再扫的！后来改了一下发现这样也能AC。

【代码】
#include<iostream>
#include<cstdio>
using namespace std;
#define maxn 1000000
#define i64 int
i64 num[maxn+5],a[100+50],ans,n,tmp,cur;
char c;
void init(){
	for(i64 i=1;i<maxn;i++) num[i]=false; 
	for(i64 i=1;i<n;i++) a[i]=0;
	cur = 0;
}
i64 f_max(i64 k){
	i64 maxl=-1;
	for(i64 i=1;i<=k;i++) if(a[i]>maxl) maxl=a[i];
	return maxl;
}
int main(){
	cin>>n;
	init();
	for(i64 i=1;i<=n;i++){
		cin>>c>>tmp;
		if(c=='+') cur++,num[tmp]=true;
		if(c=='-') {
			if(num[tmp]) cur--; 
			if(num[tmp]==false)	for(i64 j=1;j<=i;j++) a[j]++;
		}
		a[i]+=cur;
	}
	ans=f_max(n);
	cout<<ans<<endl;
	return 0;
}

C
D
E
F
待补充！
